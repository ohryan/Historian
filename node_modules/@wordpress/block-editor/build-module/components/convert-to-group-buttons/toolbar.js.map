{"version":3,"sources":["@wordpress/block-editor/src/components/convert-to-group-buttons/toolbar.js"],"names":["useDispatch","useSelect","switchToBlockType","store","blocksStore","ToolbarButton","ToolbarGroup","group","row","stack","_x","useConvertToGroupButtonProps","blockEditorStore","layouts","undefined","type","flexWrap","orientation","BlockGroupToolbar","blocksSelection","clientIds","groupingBlockName","isGroupable","replaceBlocks","canRemove","variations","select","canRemoveBlocks","getBlockVariations","onConvertToGroup","layout","newBlocks","length","attributes","onConvertToRow","onConvertToStack","canInsertRow","find","name","canInsertStack"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { switchToBlockType, store as blocksStore } from '@wordpress/blocks';\nimport { ToolbarButton, ToolbarGroup } from '@wordpress/components';\nimport { group, row, stack } from '@wordpress/icons';\nimport { _x } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { useConvertToGroupButtonProps } from '../convert-to-group-buttons';\nimport { store as blockEditorStore } from '../../store';\n\nconst layouts = {\n\tgroup: undefined,\n\trow: { type: 'flex', flexWrap: 'nowrap' },\n\tstack: { type: 'flex', orientation: 'vertical' },\n};\n\nfunction BlockGroupToolbar() {\n\tconst { blocksSelection, clientIds, groupingBlockName, isGroupable } =\n\t\tuseConvertToGroupButtonProps();\n\tconst { replaceBlocks } = useDispatch( blockEditorStore );\n\n\tconst { canRemove, variations } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { canRemoveBlocks } = select( blockEditorStore );\n\t\t\tconst { getBlockVariations } = select( blocksStore );\n\n\t\t\treturn {\n\t\t\t\tcanRemove: canRemoveBlocks( clientIds ),\n\t\t\t\tvariations: getBlockVariations(\n\t\t\t\t\tgroupingBlockName,\n\t\t\t\t\t'transform'\n\t\t\t\t),\n\t\t\t};\n\t\t},\n\t\t[ clientIds, groupingBlockName ]\n\t);\n\n\tconst onConvertToGroup = ( layout = 'group' ) => {\n\t\tconst newBlocks = switchToBlockType(\n\t\t\tblocksSelection,\n\t\t\tgroupingBlockName\n\t\t);\n\n\t\tif ( newBlocks && newBlocks.length > 0 ) {\n\t\t\t// Because the block is not in the store yet we can't use\n\t\t\t// updateBlockAttributes so need to manually update attributes.\n\t\t\tnewBlocks[ 0 ].attributes.layout = layouts[ layout ];\n\t\t\treplaceBlocks( clientIds, newBlocks );\n\t\t}\n\t};\n\n\tconst onConvertToRow = () => onConvertToGroup( 'row' );\n\tconst onConvertToStack = () => onConvertToGroup( 'stack' );\n\n\t// Don't render the button if the current selection cannot be grouped.\n\t// A good example is selecting multiple button blocks within a Buttons block:\n\t// The group block is not a valid child of Buttons, so we should not show the button.\n\t// Any blocks that are locked against removal also cannot be grouped.\n\tif ( ! isGroupable || ! canRemove ) {\n\t\treturn null;\n\t}\n\n\tconst canInsertRow = !! variations.find(\n\t\t( { name } ) => name === 'group-row'\n\t);\n\tconst canInsertStack = !! variations.find(\n\t\t( { name } ) => name === 'group-stack'\n\t);\n\n\treturn (\n\t\t<ToolbarGroup>\n\t\t\t<ToolbarButton\n\t\t\t\ticon={ group }\n\t\t\t\tlabel={ _x( 'Group', 'verb' ) }\n\t\t\t\tonClick={ onConvertToGroup }\n\t\t\t/>\n\t\t\t{ canInsertRow && (\n\t\t\t\t<ToolbarButton\n\t\t\t\t\ticon={ row }\n\t\t\t\t\tlabel={ _x( 'Row', 'single horizontal line' ) }\n\t\t\t\t\tonClick={ onConvertToRow }\n\t\t\t\t/>\n\t\t\t) }\n\t\t\t{ canInsertStack && (\n\t\t\t\t<ToolbarButton\n\t\t\t\t\ticon={ stack }\n\t\t\t\t\tlabel={ _x( 'Stack', 'verb' ) }\n\t\t\t\t\tonClick={ onConvertToStack }\n\t\t\t\t/>\n\t\t\t) }\n\t\t</ToolbarGroup>\n\t);\n}\n\nexport default BlockGroupToolbar;\n"]}