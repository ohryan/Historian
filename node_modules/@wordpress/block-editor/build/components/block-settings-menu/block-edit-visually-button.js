"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = BlockEditVisuallyButton;

var _element = require("@wordpress/element");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _blocks = require("@wordpress/blocks");

var _components = require("@wordpress/components");

var _i18n = require("@wordpress/i18n");

var _data = require("@wordpress/data");

var _store = require("../../store");

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
function BlockEditVisuallyButton(_ref) {
  let {
    clientIds,
    ...props
  } = _ref;
  const {
    block,
    shouldRender
  } = (0, _data.useSelect)(select => {
    const firstBlockClientId = clientIds[0];
    const {
      isBlockMultiSelected,
      getBlockMode,
      getBlock
    } = select(_store.store);
    const isSingleSelected = !isBlockMultiSelected(firstBlockClientId);
    const isHtmlMode = getBlockMode(firstBlockClientId) === 'html';
    return {
      block: getBlock(firstBlockClientId),
      shouldRender: isSingleSelected && isHtmlMode
    };
  }, [clientIds[0]]);
  const {
    replaceBlocks
  } = (0, _data.useDispatch)(_store.store);
  const onClick = (0, _element.useCallback)(() => {
    replaceBlocks(block.clientId, (0, _blocks.rawHandler)({
      HTML: (0, _blocks.getBlockContent)(block)
    }));
  }, [block]);

  if (!shouldRender) {
    return null;
  }

  return (0, _element.createElement)(_components.ToolbarGroup, null, (0, _element.createElement)(_components.ToolbarButton, (0, _extends2.default)({
    onClick: onClick
  }, props), (0, _i18n.__)('Edit visually')));
}
//# sourceMappingURL=block-edit-visually-button.js.map