"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _element = require("@wordpress/element");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _i18n = require("@wordpress/i18n");

var _compose = require("@wordpress/compose");

var _borderBoxControlVisualizer = _interopRequireDefault(require("../border-box-control-visualizer"));

var _borderControl = require("../../border-control");

var _grid = require("../../grid");

var _context = require("../../ui/context");

var _hook = require("./hook");

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
const BorderBoxControlSplitControls = (props, forwardedRef) => {
  const {
    centeredClassName,
    colors,
    disableCustomColors,
    enableAlpha,
    enableStyle,
    onChange,
    popoverPlacement,
    popoverOffset,
    rightAlignedClassName,
    value,
    __experimentalHasMultipleOrigins,
    __experimentalIsRenderedInSidebar,
    __next36pxDefaultSize,
    ...otherProps
  } = (0, _hook.useBorderBoxControlSplitControls)(props);
  const containerRef = (0, _element.useRef)();
  const mergedRef = (0, _compose.useMergeRefs)([containerRef, forwardedRef]);
  const popoverProps = popoverPlacement ? {
    placement: popoverPlacement,
    offset: popoverOffset,
    anchorRef: containerRef,
    __unstableShift: true
  } : undefined;
  const sharedBorderControlProps = {
    colors,
    disableCustomColors,
    enableAlpha,
    enableStyle,
    isCompact: true,
    __experimentalHasMultipleOrigins,
    __experimentalIsRenderedInSidebar,
    __next36pxDefaultSize
  };
  return (0, _element.createElement)(_grid.Grid, (0, _extends2.default)({}, otherProps, {
    ref: mergedRef,
    gap: 4
  }), (0, _element.createElement)(_borderBoxControlVisualizer.default, {
    value: value,
    __next36pxDefaultSize: __next36pxDefaultSize
  }), (0, _element.createElement)(_borderControl.BorderControl, (0, _extends2.default)({
    className: centeredClassName,
    hideLabelFromVision: true,
    label: (0, _i18n.__)('Top border'),
    onChange: newBorder => onChange(newBorder, 'top'),
    __unstablePopoverProps: popoverProps,
    value: value === null || value === void 0 ? void 0 : value.top
  }, sharedBorderControlProps)), (0, _element.createElement)(_borderControl.BorderControl, (0, _extends2.default)({
    hideLabelFromVision: true,
    label: (0, _i18n.__)('Left border'),
    onChange: newBorder => onChange(newBorder, 'left'),
    __unstablePopoverProps: popoverProps,
    value: value === null || value === void 0 ? void 0 : value.left
  }, sharedBorderControlProps)), (0, _element.createElement)(_borderControl.BorderControl, (0, _extends2.default)({
    className: rightAlignedClassName,
    hideLabelFromVision: true,
    label: (0, _i18n.__)('Right border'),
    onChange: newBorder => onChange(newBorder, 'right'),
    __unstablePopoverProps: popoverProps,
    value: value === null || value === void 0 ? void 0 : value.right
  }, sharedBorderControlProps)), (0, _element.createElement)(_borderControl.BorderControl, (0, _extends2.default)({
    className: centeredClassName,
    hideLabelFromVision: true,
    label: (0, _i18n.__)('Bottom border'),
    onChange: newBorder => onChange(newBorder, 'bottom'),
    __unstablePopoverProps: popoverProps,
    value: value === null || value === void 0 ? void 0 : value.bottom
  }, sharedBorderControlProps)));
};

const ConnectedBorderBoxControlSplitControls = (0, _context.contextConnect)(BorderBoxControlSplitControls, 'BorderBoxControlSplitControls');
var _default = ConnectedBorderBoxControlSplitControls;
exports.default = _default;
//# sourceMappingURL=component.js.map