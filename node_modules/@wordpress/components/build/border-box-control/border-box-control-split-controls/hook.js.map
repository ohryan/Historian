{"version":3,"sources":["@wordpress/components/src/border-box-control/border-box-control-split-controls/hook.ts"],"names":["useBorderBoxControlSplitControls","props","className","otherProps","cx","rtlWatchResult","rtl","watch","classes","styles","borderBoxControlSplitControls","centeredClassName","CenteredBorderControl","rightAlignedClassName","rightBorderControl"],"mappings":";;;;;;;AAGA;;AAKA;;AACA;;AACA;;;;;;AAVA;AACA;AACA;;AAGA;AACA;AACA;AAOO,SAASA,gCAAT,CACNC,KADM,EAEL;AACD,QAAM;AAAEC,IAAAA,SAAF;AAAa,OAAGC;AAAhB,MAA+B,+BACpCF,KADoC,EAEpC,+BAFoC,CAArC,CADC,CAMD;;AACA,QAAMG,EAAE,GAAG,mBAAX;;AACA,QAAMC,cAAc,GAAGC,WAAIC,KAAJ,EAAvB;;AACA,QAAMC,OAAO,GAAG,sBAAS,MAAM;AAC9B,WAAOJ,EAAE,CAAEK,MAAM,CAACC,6BAAP,EAAF,EAA0CR,SAA1C,CAAT,CAD8B,CAE9B;AACA;AACA,GAJe,EAIb,CAAEE,EAAF,EAAMF,SAAN,EAAiBG,cAAjB,CAJa,CAAhB;AAMA,QAAMM,iBAAiB,GAAG,sBAAS,MAAM;AACxC,WAAOP,EAAE,CAAEK,MAAM,CAACG,qBAAT,EAAgCV,SAAhC,CAAT;AACA,GAFyB,EAEvB,CAAEE,EAAF,EAAMF,SAAN,CAFuB,CAA1B;AAIA,QAAMW,qBAAqB,GAAG,sBAAS,MAAM;AAC5C,WAAOT,EAAE,CAAEK,MAAM,CAACK,kBAAP,EAAF,EAA+BZ,SAA/B,CAAT,CAD4C,CAE5C;AACA;AACA,GAJ6B,EAI3B,CAAEE,EAAF,EAAMF,SAAN,EAAiBG,cAAjB,CAJ2B,CAA9B;AAMA,SAAO,EACN,GAAGF,UADG;AAENQ,IAAAA,iBAFM;AAGNT,IAAAA,SAAS,EAAEM,OAHL;AAINK,IAAAA;AAJM,GAAP;AAMA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useMemo } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport * as styles from '../styles';\nimport { useContextSystem, WordPressComponentProps } from '../../ui/context';\nimport { useCx, rtl } from '../../utils/';\n\nimport type { SplitControlsProps } from '../types';\n\nexport function useBorderBoxControlSplitControls(\n\tprops: WordPressComponentProps< SplitControlsProps, 'div' >\n) {\n\tconst { className, ...otherProps } = useContextSystem(\n\t\tprops,\n\t\t'BorderBoxControlSplitControls'\n\t);\n\n\t// Generate class names.\n\tconst cx = useCx();\n\tconst rtlWatchResult = rtl.watch();\n\tconst classes = useMemo( () => {\n\t\treturn cx( styles.borderBoxControlSplitControls(), className );\n\t\t// rtlWatchResult is needed to refresh styles when the writing direction changes\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [ cx, className, rtlWatchResult ] );\n\n\tconst centeredClassName = useMemo( () => {\n\t\treturn cx( styles.CenteredBorderControl, className );\n\t}, [ cx, className ] );\n\n\tconst rightAlignedClassName = useMemo( () => {\n\t\treturn cx( styles.rightBorderControl(), className );\n\t\t// rtlWatchResult is needed to refresh styles when the writing direction changes\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [ cx, className, rtlWatchResult ] );\n\n\treturn {\n\t\t...otherProps,\n\t\tcenteredClassName,\n\t\tclassName: classes,\n\t\trightAlignedClassName,\n\t};\n}\n"]}