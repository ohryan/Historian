import { createElement } from "@wordpress/element";

/**
 * External dependencies
 */
import classnames from 'classnames';
/**
 * WordPress dependencies
 */

import { useInstanceId, useMergeRefs } from '@wordpress/compose';
import { __ } from '@wordpress/i18n';
import { Icon, search, closeSmall } from '@wordpress/icons';
import { forwardRef, useRef } from '@wordpress/element';
/**
 * Internal dependencies
 */

import { Button } from '../';
import BaseControl from '../base-control';

function SearchControl(_ref, forwardedRef) {
  let {
    className,
    onChange,
    onKeyDown,
    value,
    label,
    placeholder = __('Search'),
    hideLabelFromVision = true,
    help,
    onClose
  } = _ref;
  const searchRef = useRef();
  const instanceId = useInstanceId(SearchControl);
  const id = `components-search-control-${instanceId}`;

  const renderRightButton = () => {
    if (onClose) {
      return createElement(Button, {
        icon: closeSmall,
        label: __('Close search'),
        onClick: onClose
      });
    }

    if (!!value) {
      return createElement(Button, {
        icon: closeSmall,
        label: __('Reset search'),
        onClick: () => {
          onChange('');
          searchRef.current.focus();
        }
      });
    }

    return createElement(Icon, {
      icon: search
    });
  };

  return createElement(BaseControl, {
    label: label,
    id: id,
    hideLabelFromVision: hideLabelFromVision,
    help: help,
    className: classnames(className, 'components-search-control')
  }, createElement("div", {
    className: "components-search-control__input-wrapper"
  }, createElement("input", {
    ref: useMergeRefs([searchRef, forwardedRef]),
    className: "components-search-control__input",
    id: id,
    type: "search",
    placeholder: placeholder,
    onChange: event => onChange(event.target.value),
    onKeyDown: onKeyDown,
    autoComplete: "off",
    value: value || ''
  }), createElement("div", {
    className: "components-search-control__icon"
  }, renderRightButton())));
}

export default forwardRef(SearchControl);
//# sourceMappingURL=index.js.map